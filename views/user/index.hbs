<style>
    .modal-header {
        height: 50px;
    }

    .post-btn {
        padding-top: -1px;
    }

    .drag-image {
        /*border: 1px solid #014AAD;*/
        /*height: ;*/
        width: 63%;
        border-radius: 5px;
        font-weight: 400;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        /*box-shadow: 2px 2px 10px 2px rgb(216, 214, 214);*/
    }

    /*.drag-image.active {*/
    /*    !*border: 2px solid #014AAD;*!*/
    /*    !*box-shadow: 2px 2px 15px 2px rgb(216, 214, 214);*!*/
    /*}*/

    .drag-image .icon {
        font-size: 30px;
        color: #014AAD;
    }

    .drag-image h6 {
        font-size: 20px;
        font-weight: 300;
        color: #014AAD;
    }

    .drag-image span {
        font-size: 14px;
        font-weight: 300;
        color: #014AAD;
        margin: 10px 0 15px 0;
    }

    .drag-image button {
        padding: 10px 25px;
        font-size: 14px;
        font-weight: 300;

        outline: none;
        background: transparent;
        color: #014AAD;
        border: 1px solid #014AAD;
        border-radius: 5px;
        cursor: pointer;
        transition: all 0.5s;
    }

    .drag-image button:hover {
        background-color: #014AAD;
        color: white;
    }

    .drag-image img {
        height: 400px;
        width: 100%;
        object-fit: cover;
        border-radius: 5px;
    }

    .vertical-center {
        margin: 0;

        position: absolute;
        top: 50%;
        -ms-transform: translateY(-50%);
        transform: translateY(-50%);
    }

    .username,
    .username:hover {
        font-size: 15px;
        font-weight: bold;
        background-color: #014AAD;
        color: #5CE0E5;

    }

    .captionBox {
        border: 1px solid #014AAD;
        outline: none;

    }

    .captionBox:hover,
    .captionBox:focus,
    .captionBox:active,
    .captionBox:visited,
    .captionBox:link {
        border-color: #014AAD;
        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 5px #014AAD;
        outline: 0 none;
    }

    /*ul {*/
    /*    list-style-type: none;*/
    /*}*/

    .content ul {
        display: flex;
        flex-wrap: wrap;
        padding: 7px;
        border: 1px solid #a6a6aa;
        border-radius: 5px;
        margin: 12px 0px;
    }

    .content ul li {
        list-style: none;
        background-color: #f2f2f2;
        padding: 5px 8px 5px 10px;
        margin: 4px 3px;
        border-radius: 5px;
        border: 1px solid #e3d1e1;
    }

    .content ul li i {
        height: 25px;
        width: 25px;
        color: #808080;
        cursor: pointer;
        font-size: 12px;
        border-radius: 50%;
        margin-left: 8px;
        background-color: #dfdfdf;
        justify-content: center;
    }

    .content ul input {
        outline: none;
        flex: 1;
        padding: 5px;
        font-size: 16px;
        border: none;
        width: 100%;
    }

    .wrapper :where(li, li i, .details) {
        display: flex;
        align-items: center;
    }

    .wrapper .details {
        justify-content: space-between;
    }

    .details button {
        border: none;
        outline: none;
        background-color: #004AAD;
        color: #ffffff;
        padding: 9px 15px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 14px;
    }

    .imageCol {
        margin: 10px;
        border-radius: 5px;
        box-shadow: 2px 2px 10px 2px rgb(216, 214, 214);
        
        height: fit-content;
        
    }

    .card-img{
        width: 350px;
        object-fit: contain;
        border-radius: 5px;
    }

    .card-img-overlay {
        background-color: rgba(0, 0, 0, 0);
        transition: 0.3s;

    }

    .card:hover .card-img-overlay {
        background-color: rgba(0, 0, 0, 0.144);


    }

    .username-btn,
    .username-btn:hover {
        background-color: #ffffff;
        font-size: 15px;
        font-weight: bold;
        color: #014AAD;
        font-size: 15px;
        width: fit-content;
        padding: 3px 7px;
        align: center;
        border-radius: 5px;
        cursor: pointer;
    }

    .card-text,
    .card-title,
    .username-btn {
        display: none;
        
    }

    .card:hover .card-text,
    .card:hover .card-title,
    .card:hover .username-btn {
        display: block;
        opacity: 1;
    }

    .meta {
        padding-left: 15px;
        padding-bottom: 15px;
    }

    .tags-show,
    .tags-show:hover {
        background-color: rgba(0, 0, 0, 0.623);
        color: white;
        font-size: 15px;
        width: fit-content;
        padding: 3px 7px;
        align: center;
        border-radius: 5px;
        cursor: pointer;
        margin-right: 10px;
        
    }

    .caption-show{
        color: rgb(255, 255, 255);
        font-weight: bold;
        margin-top: 10px;
    }

    .imgBox{
        float: left;
    }
</style>
<link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/thinline.css">
<section >
    <div class="container">
        <div class="" style="margin-top: 20px;">

            {{#each images}}

            <div class="col-md imgBox" onmouseover="showTag()">
                <div class="imageCol">
                    <div class="card text-bg-dark position-relative" style="border: none;">
                        <img src="/{{this.userId}}/{{this._id}}.jpg" class="card-img" alt="...">
                        <div class="card-img-overlay">
                            
                            <div id="meta" class="meta position-absolute bottom-0 start-0">
                                <div class="card-text username-btn"
                                    onclick="profiles('{{this.username}}')">@{{this.username}}
                                </div>
                                <p class="card-text caption-show">{{this.caption}}</p>
                                <p id="tagsHidden" hidden>{{this.tags}}</p>
                                <div id="tagsShow" class="d-flex">

                                </div>
                            </div>


                        </div>
                    </div>

                </div>
            </div>

            {{/each}}
        </div>

    </div>
</section>
<section>
    {{#if user}}
    <a data-bs-toggle="modal" href="#exampleModalToggle" role="button">
        <div class="btn  position-absolute bottom-0 end-0 me-5 mb-5"
            style="border-radius: 50px;background-color: #004aad;">
            {{!-- <button class="btn"
                style="border-radius: 50px;background-color: #004aad;color:white;font-weight: bold;"> --}}
                <span style="color: #5ce1e6;font-size: x-large;font-weight: bold;">Up</span><span
                    style="color: #38B6FF;font-size: x-large;font-weight: bold;">load</span>
                {{!-- </button> --}}
            <i class="fa-solid fa-plus fa-2xl me-2 " style="color: #5ce1e6; margin-bottom:2px;"></i>
        </div>
    </a>
    {{/if}}
    <form action="/upload" method="post" enctype="multipart/form-data">
        <div class="modal fade" id="exampleModalToggle" aria-hidden="true" aria-labelledby="exampleModalToggleLabel"
            tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false">
            <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-xl">
                <div class="modal-content">
                    <div class="modal-header d-flex justify-content-between">

                        <div class="" onClick="window.location.reload();" style="width: max-content;">
                            <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor"
                                class="bi bi-arrow-left " id="back-btn" viewBox="0 0 16 16" data-bs-dismiss="modal"
                                aria-label="Close">
                                <path fill-rule="evenodd"
                                    d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z" />
                            </svg>

                        </div>
                        <div class="" style="width: max-content;">
                            <p class="modal-title" id="exampleModalToggleLabel"><strong>Create new Post</strong></p>
                        </div>
                        <div class="post-btn" style="width: max-content;">

                            <input class="modal-title btn btn-post" type="submit" value="Post"
                                style="color: #004aad;font-weight:bold;">


                        </div>


                    </div>
                    <div class="modal-body" style="height: 500px;">
                        <div class="row">
                            <div class="col-md-8 d-flex justify-content-center"
                                style="border-right: 1px solid rgb(221, 220, 220);height: 500px;margin-top:-16px;">
                                <div class="drag-image vertical-center">
                                    <div class="icon"><i class="fas fa-cloud-upload-alt"></i></div>
                                    <h6>Drag & Drop File Here</h6>
                                    <span>OR</span>
                                    <button type="button">Browse File</button>
                                    <!--                                    <input type="file" name="Image"  class="form-control" >-->


                                </div>
                            </div>

                            <div class="col-md-4" style="">
                                <div class="captionSession">
                                    <button type="button" onclick="profiles('{{user.username}}')" class="btn username">
                                        @{{user.username}}</button>

                                    <br>
                                    <br>


                                    <textarea name="caption" id="caption" cols="30" rows="8" placeholder="Add caption"
                                        class="form-control captionBox"></textarea>
                                    <br>

                                    <div class="wrapper">

                                        <div class="content">
                                            <p>Press enter or comma after Tags</p>
                                            <ul class="ul1">
                                                <input class="input1" type="text">

                                            </ul>
                                        </div>
                                        <div class="details">
                                            <input class="Image" type="file" name="Image" hidden>
                                            <input type="text" id="hiddenInput" name="tags" hidden>
                                            <p><span></span> tags are remaining</p>
                                            <button type="button">Remove All</button>
                                        </div>

                                    </div>



                                </div>

                            </div>

                        </div>

                    </div>
                    {{!-- <div class="modal-footer">
                        <button class="btn btn-primary" data-bs-target="#exampleModalToggle2" data-bs-toggle="modal"
                            data-bs-dismiss="modal">Open second modal</button>
                    </div> --}}
                </div>
            </div>
        </div>
    </form>

    {{!-- <a class="btn btn-primary" data-bs-toggle="modal" href="#exampleModalToggle" role="button">Open first
        modal</a> --}}
</section>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://use.fontawesome.com/releases/v5.7.2/css/all.css"></script>
<script>
    $(document).on("keypress", 'form', function (e) {
        let code = e.keyCode || e.which;
        if (code === 13) {
            e.preventDefault();
            return false;
        }
    });
    const dropArea = document.querySelector(".drag-image"),
        dragText = dropArea.querySelector("h6"),
        button = dropArea.querySelector("button"),
        input = document.querySelector(".Image");
    let file;

    button.onclick = () => {
        input.click();
    }

    input.addEventListener("change", function () {

        file = this.files[0];
        dropArea.classList.add("active");
        viewfile();
    });

    dropArea.addEventListener("dragover", (event) => {
        event.preventDefault();
        dropArea.classList.add("active");
        dragText.textContent = "Release to Upload File";
    });


    dropArea.addEventListener("dragleave", () => {
        dropArea.classList.remove("active");
        dragText.textContent = "Drag & Drop to Upload File";
    });

    dropArea.addEventListener("drop", (event) => {
        event.preventDefault();

        file = event.dataTransfer.files[0];
        viewfile();
    });

    function viewfile() {
        let fileType = file.type;
        let validExtensions = ["image/jpeg", "image/jpg", "image/png"];
        if (validExtensions.includes(fileType)) {
            let fileReader = new FileReader();
            fileReader.onload = () => {
                let fileURL = fileReader.result;
                let imgTag = `<img src="${fileURL}" alt="image">`;
                dropArea.style.width = 'max-content'
                dropArea.innerHTML = imgTag;
            }
            fileReader.readAsDataURL(file);
        } else {
            alert("This is not an Image File!");
            dropArea.classList.remove("active");
            dragText.textContent = "Drag & Drop to Upload File";
        }
    }



    function profiles(username) {
        window.location.href = "/profile/" + username;

    }

    function viewSuggest() {

    }

    let ul, input1, countNum, hiddenInput;
    ul = document.querySelector(".ul1");
    input1 = document.querySelector(".input1");
    countNum = document.querySelector(".details span");
    hiddenInput = document.querySelector(".hiddenInput");


    let maxTags = 10,
        tags = [];

    countTag();
    showTags()
    function showTags() {
        document.getElementById('hiddenInput').value = tags.join(", ");

    }

    function countTag() {
        input1.focus()
        countNum.innerText = maxTags - tags.length;
    }

    function createTag() {
        ul.querySelectorAll("li").forEach(li => li.remove());
        tags.slice().reverse().forEach(tag => {
            let liTag = `<li>${tag}<i class="uit uit-multiply" onclick="remove(this, '${tag}')"></i></li>`;
            ul.insertAdjacentHTML("afterbegin", liTag);
        });
        countTag();
        showTags()
    }

    function remove(element, tag) {
        let index = tags.indexOf(tag);
        tags = [...tags.slice(0, index), ...tags.slice(index + 1)];
        element.parentElement.remove()

        countTag();
        showTags()
    }




    function addTag(e) {
        if (e.key === "Enter") {
            let tag = e.target.value.replace(/\s+/g, '');
            if (tag.length > 1 && !tags.includes(tag)) {
                if (tags.length < maxTags) {
                    tag.split(',').forEach(tag => {
                        tags.push(tag);
                        console.log(tags)
                        createTag();
                        showTags()


                    });
                }
            }
            e.target.value = "";


        }
    }

    input1.addEventListener("keyup", addTag);
    const removeBtn = document.querySelector(".details button");
    removeBtn.addEventListener("click", () => {
        tags.length = 0;
        ul.querySelectorAll("li").forEach(li => li.remove());
        countTag();
        showTags()

    });
    
    
    

    function showTag() {
        let tags = document.getElementById('tagsHidden').textContent;
        tags = tags.split(',');
        var outputDiv = document.getElementById('tagsShow');
        
        for (var i = 0; i < tags.length; i++) {
          var element = document.createElement("div");
          element.className = "card-text tags-show flex";
          element.textContent = tags[i];
          outputDiv.appendChild(element);
        }
        console.log(tags) 
    }
    

</script>